Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    Comment
    Keyword
    Operator
    Seperator
    based
    case
    const
    default
    err
    false
    goto
    interface
    null
    strictfp
    switch
    true

Grammar

Rule 0     S' -> CompilationUnit
Rule 1     CompilationUnit -> PackageDeclaration ImportDeclarations TypeDeclarations
Rule 2     CompilationUnit -> PackageDeclaration ImportDeclarations
Rule 3     CompilationUnit -> PackageDeclaration TypeDeclarations
Rule 4     CompilationUnit -> ImportDeclarations TypeDeclarations
Rule 5     CompilationUnit -> PackageDeclaration
Rule 6     CompilationUnit -> ImportDeclarations
Rule 7     CompilationUnit -> TypeDeclarations
Rule 8     CompilationUnit -> <empty>
Rule 9     PackageDeclaration -> package Name ;
Rule 10    ImportDeclarations -> ImportDeclaration
Rule 11    ImportDeclarations -> ImportDeclaration ImportDeclaration
Rule 12    TypeDeclarations -> TypeDeclaration
Rule 13    TypeDeclarations -> ImportDeclarations ImportDeclaration
Rule 14    ImportDeclaration -> SingleTypeImportDeclaration
Rule 15    ImportDeclaration -> TypeImportOnDemandDeclaration
Rule 16    SingleTypeImportDeclaration -> import Name ;
Rule 17    TypeImportOnDemandDeclaration -> import Name . * ;
Rule 18    TypeDeclaration -> ClassDeclaration
Rule 19    ArrayInitializer -> ArrayInitializer VariableInitializerList ,
Rule 20    ArrayInitializer -> ArrayInitializer VariableInitializerList
Rule 21    ArrayInitializer -> ArrayInitializer ,
Rule 22    ArrayInitializer -> <empty>
Rule 23    VariableInitializerList -> VariableInitializer
Rule 24    VariableInitializerList -> VariableInitializer CommaVariableInitializers
Rule 25    CommaVariableInitializers -> , VariableInitializer
Rule 26    CommaVariableInitializers -> CommaVariableInitializers , VariableInitializer
Rule 27    Primary -> PrimaryNoNewArray
Rule 28    Primary -> ArrayCreationExpression
Rule 29    PrimaryNoNewArray -> Literal
Rule 30    PrimaryNoNewArray -> ClassLiteral
Rule 31    PrimaryNoNewArray -> this
Rule 32    PrimaryNoNewArray -> Name . this
Rule 33    PrimaryNoNewArray -> ( Expression )
Rule 34    PrimaryNoNewArray -> ClassInstanceCreationExpression
Rule 35    PrimaryNoNewArray -> FieldAccess
Rule 36    PrimaryNoNewArray -> ArrayAccess
Rule 37    PrimaryNoNewArray -> MethodInvocation
Rule 38    PrimaryNoNewArray -> MethodReference
Rule 39    ClassLiteral -> Name SquareStar . class
Rule 40    ClassLiteral -> NumericType SquareStar . class
Rule 41    ClassLiteral -> boolean SquareStar . class
Rule 42    ClassLiteral -> Name . class
Rule 43    ClassLiteral -> NumericType . class
Rule 44    ClassLiteral -> boolean . class
Rule 45    ClassLiteral -> void . class
Rule 46    SquareStar -> [ ]
Rule 47    SquareStar -> SquareStar [ ]
Rule 48    ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression
Rule 49    ClassInstanceCreationExpression -> Name . UnqualifiedClassInstanceCreationExpression
Rule 50    ClassInstanceCreationExpression -> Primary . UnqualifiedClassInstanceCreationExpression
Rule 51    UnqualifiedClassInstanceCreationExpression -> new TypeArguments ClassOrInterfaceTypeToInstantiate ( ArgumentList ) ClassBody
Rule 52    UnqualifiedClassInstanceCreationExpression -> new ClassOrInterfaceTypeToInstantiate ( ArgumentList ) ClassBody
Rule 53    UnqualifiedClassInstanceCreationExpression -> new TypeArguments ClassOrInterfaceTypeToInstantiate ( ) ClassBody
Rule 54    ClassOrInterfaceTypeToInstantiate -> Annotations Identifier AnnoIdenStar TypeArgumentsOrDiamond
Rule 55    ClassOrInterfaceTypeToInstantiate -> Identifier AnnoIdenStar TypeArgumentsOrDiamond
Rule 56    ClassOrInterfaceTypeToInstantiate -> Annotations Identifier TypeArgumentsOrDiamond
Rule 57    ClassOrInterfaceTypeToInstantiate -> Annotations Identifier AnnoIdenStar
Rule 58    ClassOrInterfaceTypeToInstantiate -> Identifier AnnoIdenStar
Rule 59    ClassOrInterfaceTypeToInstantiate -> Annotations Identifier
Rule 60    ClassOrInterfaceTypeToInstantiate -> Identifier TypeArgumentsOrDiamond
Rule 61    ClassOrInterfaceTypeToInstantiate -> Identifier
Rule 62    TypeArgumentsOrDiamond -> TypeArguments
Rule 63    TypeArgumentsOrDiamond -> < >
Rule 64    FieldAccess -> Primary . Identifier
Rule 65    FieldAccess -> super . Identifier
Rule 66    FieldAccess -> Name . super . Identifier
Rule 67    ArrayAccess -> Name [ Expression ]
Rule 68    ArrayAccess -> PrimaryNoNewArray [ Expression ]
Rule 69    MethodInvocation -> Name ( ArgumentList )
Rule 70    MethodInvocation -> Name ( )
Rule 71    MethodInvocation -> Name . TypeArguments Identifier ( ArgumentList )
Rule 72    MethodInvocation -> Name . Identifier ( ArgumentList )
Rule 73    MethodInvocation -> Name . Identifier ( )
Rule 74    MethodInvocation -> Primary . TypeArguments Identifier ( ArgumentList )
Rule 75    MethodInvocation -> Primary . Identifier ( ArgumentList )
Rule 76    MethodInvocation -> Primary . Identifier ( )
Rule 77    MethodInvocation -> super . TypeArguments Identifier ( ArgumentList )
Rule 78    MethodInvocation -> super . Identifier ( ArgumentList )
Rule 79    MethodInvocation -> super . Identifier ( )
Rule 80    MethodInvocation -> Name . super . TypeArguments Identifier ( ArgumentList )
Rule 81    MethodInvocation -> Name . super . Identifier ( ArgumentList )
Rule 82    MethodInvocation -> Name . super . Identifier ( )
Rule 83    ArgumentList -> Expression
Rule 84    ArgumentList -> ArgumentList , Expression
Rule 85    MethodReference -> Name : : TypeArguments Identifier
Rule 86    MethodReference -> ReferenceType : : TypeArguments Identifier
Rule 87    MethodReference -> Primary : : TypeArguments Identifier
Rule 88    MethodReference -> super : : TypeArguments Identifier
Rule 89    MethodReference -> Name . super : : TypeArguments Identifier
Rule 90    MethodReference -> ClassType : : TypeArguments new
Rule 91    MethodReference -> Name : : Identifier
Rule 92    MethodReference -> ReferenceType : : Identifier
Rule 93    MethodReference -> Primary : : Identifier
Rule 94    MethodReference -> super : : Identifier
Rule 95    MethodReference -> Name . super : : Identifier
Rule 96    MethodReference -> ClassType : : new
Rule 97    MethodReference -> ArrayType : : new
Rule 98    ArrayCreationExpression -> new PrimitiveType DimExprs Dims
Rule 99    ArrayCreationExpression -> new ClassOrInterfaceType DimExprs Dims
Rule 100   ArrayCreationExpression -> new PrimitiveType DimExprs
Rule 101   ArrayCreationExpression -> new ClassOrInterfaceType DimExprs
Rule 102   ArrayCreationExpression -> new PrimitiveType Dims ArrayInitializer
Rule 103   ArrayCreationExpression -> new ClassOrInterfaceType Dims ArrayInitializer
Rule 104   DimExprs -> DimExpr
Rule 105   DimExprs -> DimExpr DimExprs
Rule 106   DimExpr -> Annotations [ Expression ]
Rule 107   Expression -> LambdaExpression
Rule 108   Expression -> AssignmentExpression
Rule 109   LambdaExpression -> LambdaParameters - > LambdaBody
Rule 110   LambdaParameters -> Identifier
Rule 111   LambdaParameters -> ( FormalParameterList )
Rule 112   LambdaParameters -> ( )
Rule 113   LambdaParameters -> ( InferredFormalParameterList )
Rule 114   InferredFormalParameterList -> Identifier
Rule 115   InferredFormalParameterList -> Identifier , InferredFormalParameterList
Rule 116   LambdaBody -> Expression
Rule 117   LambdaBody -> Block
Rule 118   AssignmentExpression -> ConditionalExpression
Rule 119   AssignmentExpression -> Assignment
Rule 120   Assignment -> LeftHandSide AssignmentOperator Expression
Rule 121   LeftHandSide -> Name
Rule 122   LeftHandSide -> FieldAccess
Rule 123   LeftHandSide -> ArrayAccess
Rule 124   AssignmentOperator -> =
Rule 125   AssignmentOperator -> * =
Rule 126   AssignmentOperator -> / =
Rule 127   AssignmentOperator -> % =
Rule 128   AssignmentOperator -> + =
Rule 129   AssignmentOperator -> - =
Rule 130   AssignmentOperator -> < < =
Rule 131   AssignmentOperator -> > > =
Rule 132   AssignmentOperator -> > > > =
Rule 133   AssignmentOperator -> & =
Rule 134   AssignmentOperator -> ^ =
Rule 135   AssignmentOperator -> | =
Rule 136   ConditionalExpression -> ConditionalOrExpression
Rule 137   ConditionalExpression -> ConditionalOrExpression ? Expression : ConditionalExpression
Rule 138   ConditionalExpression -> ConditionalOrExpression ? Expression : LambdaExpression
Rule 139   ConditionalOrExpression -> ConditionalAndExpression
Rule 140   ConditionalOrExpression -> ConditionalAndExpression & & ConditionalOrExpression
Rule 141   ConditionalAndExpression -> InclusiveOrExpression
Rule 142   ConditionalAndExpression -> ConditionalAndExpression & & InclusiveOrExpression
Rule 143   InclusiveOrExpression -> ExclusiveOrExpression
Rule 144   InclusiveOrExpression -> InclusiveOrExpression | ExclusiveOrExpression
Rule 145   ExclusiveOrExpression -> AndExpression
Rule 146   ExclusiveOrExpression -> ExclusiveOrExpression ^ AndExpression
Rule 147   AndExpression -> EqualityExpression
Rule 148   AndExpression -> AndExpression & EqualityExpression
Rule 149   EqualityExpression -> RelationalExpression
Rule 150   EqualityExpression -> EqualityExpression = = RelationalExpression
Rule 151   EqualityExpression -> EqualityExpression ! = RelationalExpression
Rule 152   RelationalExpression -> ShiftExpression
Rule 153   RelationalExpression -> RelationalExpression < ShiftExpression
Rule 154   RelationalExpression -> RelationalExpression > ShiftExpression
Rule 155   RelationalExpression -> RelationalExpression < = ShiftExpression
Rule 156   RelationalExpression -> RelationalExpression > = ShiftExpression
Rule 157   RelationalExpression -> RelationalExpression instanceof ReferenceType
Rule 158   ShiftExpression -> AdditiveExpression
Rule 159   ShiftExpression -> ShiftExpression < < AdditiveExpression
Rule 160   ShiftExpression -> ShiftExpression > > AdditiveExpression
Rule 161   ShiftExpression -> ShiftExpression > > > AdditiveExpression
Rule 162   AdditiveExpression -> MultiplicativeExpression
Rule 163   AdditiveExpression -> AdditiveExpression + MultiplicativeExpression
Rule 164   AdditiveExpression -> AdditiveExpression - MultiplicativeExpression
Rule 165   MultiplicativeExpression -> UnaryExpression
Rule 166   MultiplicativeExpression -> MultiplicativeExpression * UnaryExpression
Rule 167   MultiplicativeExpression -> MultiplicativeExpression / UnaryExpression
Rule 168   MultiplicativeExpression -> MultiplicativeExpression % UnaryExpression
Rule 169   UnaryExpression -> PreIncrementExpression
Rule 170   UnaryExpression -> PreDecrementExpression
Rule 171   UnaryExpression -> + UnaryExpression
Rule 172   UnaryExpression -> - UnaryExpression
Rule 173   UnaryExpression -> UnaryExpressionNotPlusMinus
Rule 174   PreIncrementExpression -> + + UnaryExpression
Rule 175   PreDecrementExpression -> - - UnaryExpression
Rule 176   UnaryExpressionNotPlusMinus -> PostfixExpression
Rule 177   UnaryExpressionNotPlusMinus -> ~ UnaryExpression
Rule 178   UnaryExpressionNotPlusMinus -> ! UnaryExpression
Rule 179   UnaryExpressionNotPlusMinus -> CastExpression
Rule 180   PostfixExpression -> Primary
Rule 181   PostfixExpression -> Name
Rule 182   PostfixExpression -> PostIncrementExpression
Rule 183   PostfixExpression -> PostDecrementExpression
Rule 184   PostIncrementExpression -> PostfixExpression + +
Rule 185   PostDecrementExpression -> PostfixExpression - -
Rule 186   CastExpression -> ( PrimitiveType ) UnaryExpression
Rule 187   CastExpression -> ( ReferenceType AdditionalBoundS ) UnaryExpressionNotPlusMinus
Rule 188   CastExpression -> ( ReferenceType AdditionalBoundS ) LambdaExpression
Rule 189   ConstantExpression -> Expression
Rule 190   Identifier -> IDENTIFIER
Rule 191   Name -> SimpleName
Rule 192   Name -> QualifiedName
Rule 193   SimpleName -> Identifier
Rule 194   QualifiedName -> Name . Identifier
Rule 195   ClassDeclaration -> NormalClassDeclaration
Rule 196   ClassDeclaration -> EnumDeclaration
Rule 197   NormalClassDeclaration -> Modifiers class Identifier TypeParameters Superclass Superinterfaces ClassBody
Rule 198   NormalClassDeclaration -> class Identifier TypeParameters Superclass Superinterfaces ClassBody
Rule 199   NormalClassDeclaration -> Modifiers class Identifier TypeParameters Superclass ClassBody
Rule 200   NormalClassDeclaration -> class Identifier TypeParameters Superclass ClassBody
Rule 201   NormalClassDeclaration -> Modifiers class Identifier TypeParameters Superinterfaces ClassBody
Rule 202   NormalClassDeclaration -> class Identifier TypeParameters Superinterfaces ClassBody
Rule 203   NormalClassDeclaration -> Modifiers class Identifier TypeParameters ClassBody
Rule 204   NormalClassDeclaration -> class Identifier TypeParameters ClassBody
Rule 205   NormalClassDeclaration -> Modifiers class Identifier Superclass Superinterfaces ClassBody
Rule 206   NormalClassDeclaration -> class Identifier Superclass Superinterfaces ClassBody
Rule 207   NormalClassDeclaration -> Modifiers class Identifier Superclass ClassBody
Rule 208   NormalClassDeclaration -> class Identifier Superclass ClassBody
Rule 209   NormalClassDeclaration -> Modifiers class Identifier Superinterfaces ClassBody
Rule 210   NormalClassDeclaration -> class Identifier Superinterfaces ClassBody
Rule 211   NormalClassDeclaration -> Modifiers class Identifier ClassBody
Rule 212   NormalClassDeclaration -> class Identifier ClassBody
Rule 213   Modifiers -> Modifier
Rule 214   Modifiers -> Modifiers Modifier
Rule 215   Modifier -> public
Rule 216   Modifier -> protected
Rule 217   Modifier -> private
Rule 218   Modifier -> static
Rule 219   Modifier -> abstract
Rule 220   Modifier -> final
Rule 221   Modifier -> native
Rule 222   Modifier -> synchronized
Rule 223   Modifier -> transient
Rule 224   Modifier -> volatile
Rule 225   TypeParameters -> < TypeParameterList >
Rule 226   TypeParameterList -> TypeParameter
Rule 227   TypeParameterList -> TypeParameter CommaTypeParameterStar
Rule 228   CommaTypeParameterStar -> , TypeParameter
Rule 229   CommaTypeParameterStar -> CommaTypeParameterStar , TypeParameter
Rule 230   Superclass -> extends ClassType
Rule 231   Superinterfaces -> implements InterfaceTypeList
Rule 232   InterfaceTypeList -> InterfaceType
Rule 233   InterfaceTypeList -> InterfaceType CommaInterfaceTypeStar
Rule 234   CommaInterfaceTypeStar -> , InterfaceType
Rule 235   CommaInterfaceTypeStar -> CommaInterfaceTypeStar , InterfaceType
Rule 236   ClassBody -> ClassBody ClassBodyDeclarationStar
Rule 237   ClassBody -> <empty>
Rule 238   ClassBodyeclarationStar -> ClassBodyeclarationStar ClassBodyeclaration
Rule 239   ClassBodyeclaration -> ClassMemberDeclaration
Rule 240   ClassBodyeclaration -> InstanceInitializer
Rule 241   ClassBodyeclaration -> StaticInitializer
Rule 242   ClassBodyeclaration -> ConstructorDeclaration
Rule 243   ClassMemberDeclaration -> FieldDeclaration
Rule 244   ClassMemberDeclaration -> MethodDeclaration
Rule 245   ClassMemberDeclaration -> ClassDeclaration
Rule 246   FieldDeclaration -> Modifiers UnannType VariableDeclaratorList
Rule 247   FieldDeclaration -> UnannType VariableDeclaratorList
Rule 248   VariableDeclaratorList -> VariableDeclarator CommaVariableDeclaratorStar
Rule 249   VariableDeclaratorList -> VariableDeclarator
Rule 250   CommaVariableDeclaratorStar -> , VariableDeclarator
Rule 251   CommaVariableDeclaratorStar -> CommaVariableDeclaratorStar , VariableDeclarator
Rule 252   VariableDeclarator -> VariableDeclaratorId = VariableInitializer
Rule 253   VariableDeclarator -> VariableDeclaratorId
Rule 254   VariableDeclaratorId -> Identifier Dims
Rule 255   VariableDeclaratorId -> Identifier
Rule 256   VariableInitializer -> Expression
Rule 257   VariableInitializer -> ArrayInitializer
Rule 258   UnannType -> UnannPrimitiveType
Rule 259   UnannType -> UnannReferenceType
Rule 260   UnannPrimitiveType -> NumericType
Rule 261   UnannPrimitiveType -> boolean
Rule 262   UnannReferenceType -> UnannClassOrInterfaceType
Rule 263   UnannReferenceType -> UnannTypeVariable
Rule 264   UnannReferenceType -> UnannArrayType
Rule 265   UnannClassOrInterfaceType -> UnannClassType
Rule 266   UnannClassOrInterfaceType -> UnannInterfaceType
Rule 267   UnannClassType -> Identifier TypeArguments
Rule 268   UnannClassType -> Identifier
Rule 269   UnannClassType -> UnannClassOrInterfaceType . Annotations Identifier TypeArguments
Rule 270   UnannClassType -> UnannClassOrInterfaceType . Annotations Identifier
Rule 271   UnannClassType -> UnannClassOrInterfaceType . Identifier TypeArguments
Rule 272   UnannClassType -> UnannClassOrInterfaceType . Identifier
Rule 273   UnannInterfaceType -> UnannClassType
Rule 274   UnannTypeVariable -> Identifier
Rule 275   UnannArrayType -> UnannPrimitiveType Dims
Rule 276   UnannArrayType -> UnannClassOrInterfaceType Dims
Rule 277   UnannArrayType -> UnannTypeVariable Dims
Rule 278   MethodDeclaration -> Modifiers MethodHeader MethodBody
Rule 279   MethodHeader -> Result MethodDeclarator Throws
Rule 280   MethodHeader -> Result MethodDeclarator
Rule 281   MethodHeader -> TypeParameters Annotations Result MethodDeclarator Throws
Rule 282   MethodHeader -> TypeParameters Annotations Result MethodDeclarator
Rule 283   Result -> UnannType
Rule 284   Result -> void
Rule 285   MethodDeclarator -> Identifier ( FormalParameterList ) Dims
Rule 286   MethodDeclarator -> Identifier ( ) Dims
Rule 287   MethodDeclarator -> Identifier ( FormalParameterList )
Rule 288   MethodDeclarator -> Identifier ( )
Rule 289   FormalParameterList -> ReceiverParameter
Rule 290   FormalParameterList -> FormalParameters , LastFormalParameter
Rule 291   FormalParameterList -> LastFormalParameter
Rule 292   FormalParameters -> FormalParameter CommaFormalParameters
Rule 293   FormalParameters -> ReceiverParameter CommaFormalParameters
Rule 294   FormalParameters -> FormalParameter
Rule 295   FormalParameters -> ReceiverParameter
Rule 296   CommaFormalParameters -> , FormalParameter
Rule 297   CommaFormalParameters -> CommaFormalParameters , FormalParameter
Rule 298   FormalParameter -> Modifiers UnannType VariableDeclaratorId
Rule 299   FormalParameter -> UnannType VariableDeclaratorId
Rule 300   LastFormalParameter -> Modifiers UnannType Annotations . . . VariableDeclaratorId
Rule 301   LastFormalParameter -> FormalParameter
Rule 302   ReceiverParameter -> Annotations UnannType Identifier . this
Rule 303   ReceiverParameter -> Annotations UnannType this
Rule 304   Throws -> throws ExceptionTypeList
Rule 305   ExceptionTypeList -> ExceptionType CommaExceptionTypes
Rule 306   ExceptionTypeList -> ExceptionType
Rule 307   CommaExceptionTypes -> , ExceptionType
Rule 308   CommaExceptionTypes -> CommaExceptionTypes , ExceptionType
Rule 309   ExceptionType -> ClassType
Rule 310   ExceptionType -> TypeVariable
Rule 311   MethodBody -> Block
Rule 312   MethodBody -> ;
Rule 313   InstanceInitializer -> Block
Rule 314   StaticInitializer -> static Block
Rule 315   ConstructorDeclaration -> Modifiers ConstructorDeclarator Throws ConstructorBody
Rule 316   ConstructorDeclaration -> ConstructorDeclarator Throws ConstructorBody
Rule 317   ConstructorDeclaration -> ConstructorDeclarator ConstructorBody
Rule 318   ConstructorDeclaration -> Modifiers ConstructorDeclarator ConstructorBody
Rule 319   ConstructorDeclarator -> TypeParameters SimpleTypeName ( FormalParameterList )
Rule 320   ConstructorDeclarator -> SimpleTypeName ( FormalParameterList )
Rule 321   ConstructorDeclarator -> SimpleTypeName ( )
Rule 322   ConstructorDeclarator -> TypeParameters SimpleTypeName ( )
Rule 323   SimpleTypeName -> Identifier
Rule 324   ConstructorBody -> ConstructorBody ExplicitConstructorInvocation BlockStatements
Rule 325   ConstructorBody -> ConstructorBody BlockStatements
Rule 326   ConstructorBody -> ConstructorBody ExplicitConstructorInvocation
Rule 327   ConstructorBody -> <empty>
Rule 328   ExplicitConstructorInvocation -> TypeArguments this ( ArgumentList ) ;
Rule 329   ExplicitConstructorInvocation -> this ( ArgumentList ) ;
Rule 330   ExplicitConstructorInvocation -> TypeArguments this ( ) ;
Rule 331   ExplicitConstructorInvocation -> this ( ) ;
Rule 332   ExplicitConstructorInvocation -> TypeArguments super ( ArgumentList ) ;
Rule 333   ExplicitConstructorInvocation -> super ( ArgumentList ) ;
Rule 334   ExplicitConstructorInvocation -> super ( ) ;
Rule 335   ExplicitConstructorInvocation -> TypeArguments super ( ) ;
Rule 336   ExplicitConstructorInvocation -> Name . TypeArguments super ( ArgumentList ) ;
Rule 337   ExplicitConstructorInvocation -> Name . TypeArguments super ( ) ;
Rule 338   ExplicitConstructorInvocation -> Name . super ( ArgumentList ) ;
Rule 339   ExplicitConstructorInvocation -> Name . super ( ) ;
Rule 340   ExplicitConstructorInvocation -> Primary . TypeArguments super ( ArgumentList ) ;
Rule 341   ExplicitConstructorInvocation -> Primary . TypeArguments super ( ) ;
Rule 342   ExplicitConstructorInvocation -> Primary . super ( ArgumentList ) ;
Rule 343   ExplicitConstructorInvocation -> Primary . super ( ) ;
Rule 344   EnumDeclaration -> Modifiers enum Identifier Superinterfaces EnumBody
Rule 345   EnumDeclaration -> Modifiers enum Identifier EnumBody
Rule 346   EnumDeclaration -> enum Identifier EnumBody
Rule 347   EnumDeclaration -> enum Identifier Superinterfaces EnumBody
Rule 348   EnumBody -> <empty>
Rule 349   EnumBody -> EnumBody EnumConstantList , EnumBodyDeclarations
Rule 350   EnumBody -> EnumBody EnumConstantList ,
Rule 351   EnumBody -> EnumBody EnumConstantList EnumBodyDeclarations
Rule 352   EnumBody -> EnumBody EnumConstantList
Rule 353   EnumBody -> EnumBody , EnumBodyDeclarations
Rule 354   EnumBody -> EnumBody ,
Rule 355   EnumBody -> EnumBody EnumBodyDeclarations
Rule 356   EnumConstantList -> EnumConstant CommaEnumConstants
Rule 357   EnumConstantList -> EnumConstant
Rule 358   CommaEnumConstants -> , EnumConstant
Rule 359   CommaEnumConstants -> CommaEnumConstants , EnumConstant
Rule 360   EnumConstant -> EnumConstantModifiers Identifier ( ArgumentList ) ClassBody
Rule 361   EnumConstant -> EnumConstantModifiers Identifier ( ) ClassBody
Rule 362   EnumConstant -> EnumConstantModifiers Identifier ClassBody
Rule 363   EnumConstant -> EnumConstantModifiers Identifier ( ArgumentList )
Rule 364   EnumConstant -> EnumConstantModifiers Identifier ( )
Rule 365   EnumConstant -> EnumConstantModifiers Identifier
Rule 366   EnumConstant -> Identifier ( ArgumentList ) ClassBody
Rule 367   EnumConstant -> Identifier ( ) ClassBody
Rule 368   EnumConstant -> Identifier ClassBody
Rule 369   EnumConstant -> Identifier
Rule 370   EnumConstant -> Identifier ( ArgumentList )
Rule 371   EnumConstant -> Identifier ( )
Rule 372   EnumConstantModifier -> Annotation
Rule 373   EnumBodyDeclarations -> ; ClassBodyDeclarationStar
Rule 374   EnumBodyDeclarations -> ;
Rule 375   ClassBodyDeclarationStar -> ClassBodyDeclaration
Rule 376   ClassBodyDeclarationStar -> ClassBodyDeclarationStar ClassBodyDeclaration
Rule 377   EnumConstantModifiers -> EnumConstantModifier
Rule 378   EnumConstantModifiers -> EnumConstantModifiers EnumConstantModifier
Rule 379   Type -> PrimitiveType
Rule 380   Type -> ReferenceType
Rule 381   PrimitiveType -> NumericType
Rule 382   PrimitiveType -> Annotations NumericType
Rule 383   PrimitiveType -> boolean
Rule 384   PrimitiveType -> Annotations boolean
Rule 385   Annotations -> Annotation
Rule 386   Annotations -> Annotations Annotation
Rule 387   NumericType -> IntegralType
Rule 388   NumericType -> FloatingPointType
Rule 389   IntegralType -> byte
Rule 390   IntegralType -> short
Rule 391   IntegralType -> int
Rule 392   IntegralType -> long
Rule 393   IntegralType -> char
Rule 394   FloatingPointType -> float
Rule 395   FloatingPointType -> double
Rule 396   ReferenceType -> ClassoOrInterfaceType
Rule 397   ReferenceType -> TypeVariable
Rule 398   ReferenceType -> ArrayType
Rule 399   ClassOrInterfaceType -> Name
Rule 400   ClassType -> ClassOrInterfaceType
Rule 401   InterfaceType -> ClassOrInterfaceType
Rule 402   ArrayType -> PrimitiveType [ ]
Rule 403   ArrayType -> Name [ ]
Rule 404   ArrayType -> ArrayType [ ]
Rule 405   Dims -> [ ]
Rule 406   Dims -> [ ] sqAnnotations
Rule 407   Dims -> Annotations [ ]
Rule 408   Dims -> Annotations [ ] sqAnnotations
Rule 409   sqAnnotations -> [ ]
Rule 410   sqAnnotations -> sqAnnotations [ ]
Rule 411   sqAnnotations -> sqAnnotations Annotations [ ]
Rule 412   TypeParameter -> Identifier
Rule 413   TypeParameter -> Identifier TypeBound
Rule 414   TypeParameter -> TypeParameterModifiers Identifier
Rule 415   TypeParameter -> TypeParameterModifiers Identifier TypeBound
Rule 416   TypeParameterModifiers -> TypeParameterModifier
Rule 417   TypeParameterModifiers -> TypeParameterModifiers TypeParameterModifier
Rule 418   TypeParameterModifier -> Annotation
Rule 419   TypeBound -> extends TypeVariable
Rule 420   TypeBound -> extends ClassOrInterfaceType
Rule 421   TypeBound -> extends ClassOrInterfaceType AdditionalBounds
Rule 422   AdditionalBounds -> AdditionalBound
Rule 423   AdditionalBounds -> AdditionalBounds AdditionalBound
Rule 424   AdditionalBound -> & InterfaceType
Rule 425   TypeArguments -> < TypeArgumentList >
Rule 426   TypeArgumentList -> TypeArgument
Rule 427   TypeArgumentList -> TypeArgument comTypeArguments
Rule 428   comTypeArguments -> , TypeArgument
Rule 429   comTypeArguments -> comTypeArguments , TypeArgument
Rule 430   TypeArgument -> ReferenceType
Rule 431   TypeArgument -> Wildcard
Rule 432   Wildcard -> ?
Rule 433   Wildcard -> ? WildcardBounds
Rule 434   Wildcard -> Annotations ?
Rule 435   Wildcard -> Annotations ? WildcardBounds
Rule 436   WildcardBounds -> extends ReferenceType
Rule 437   WildcardBounds -> super Reference Type
Rule 438   Annotation -> NormalAnnotation
Rule 439   Annotation -> MarkerAnnotation
Rule 440   Annotation -> SingleElementAnnotation
Rule 441   NormalAnnotation -> @ Name ( )
Rule 442   NormalAnnotation -> @ Name ( ElementValuePairList )
Rule 443   ElementValuePairList -> ElementValuePair
Rule 444   ElementValuePairList -> ElementValuePair comElementValuePairs
Rule 445   comElementValuePairs -> , ElementValuePair
Rule 446   comElementValuePairs -> comElementValuePairs , ElementValuePair
Rule 447   ElementValuePair -> Identifier = ElementValue
Rule 448   ElementValue -> ConditionalExpression
Rule 449   ElementValue -> ElementValueArrayInitializer
Rule 450   ElementValue -> Annotation
Rule 451   ElementValueArrayInitializer -> <empty>
Rule 452   ElementValueArrayInitializer -> ElementValueArrayInitializer ElementValueList
Rule 453   ElementValueArrayInitializer -> ElementValueArrayInitializer ,
Rule 454   ElementValueArrayInitializer -> ElementValueArrayInitializer ElementValueList ,
Rule 455   ElementValueList -> ElementValue
Rule 456   ElementValueList -> ElementValue comElementValues
Rule 457   comElementValues -> , ElementValue
Rule 458   comElementValues -> comElementValues , ElementValue
Rule 459   MarkerAnnotation -> @ Name
Rule 460   SingleElementAnnotation -> @ Name ( ElementValue )
Rule 461   Block -> <empty>
Rule 462   Block -> Block oneBlockStatements
Rule 463   oneBlockStatements -> <empty>
Rule 464   oneBlockStatements -> BlockStatements
Rule 465   BlockStatements -> BockStatement
Rule 466   BlockStatements -> BlockStatements BlockStatement
Rule 467   BlockStatement -> LocalVariableDeclarationStatement
Rule 468   BlockStatement -> ClassDeclaration
Rule 469   BlockStatement -> Statement
Rule 470   LocalVariableDeclarationStatement -> LocalVariableDeclaration ;
Rule 471   LocalVariableDeclaration -> UnannType VariableDeclaratorList
Rule 472   LocalVariableDeclaration -> VariableModifierStar UnannType VariableDeclaratorList
Rule 473   VariableModifierStar -> VariableModifier
Rule 474   VariableModifierStar -> VariableModifierStar VariableModifier
Rule 475   Statement -> StatementWithoutTrailingSubstatement
Rule 476   Statement -> LabeledStatement
Rule 477   Statement -> IfThenStatement
Rule 478   Statement -> IfThenElseStatement
Rule 479   Statement -> WhileStatement
Rule 480   Statement -> ForStatement
Rule 481   StatementNoShortIf -> StatementWithoutTrailingSubstatement
Rule 482   StatementNoShortIf -> LabeledStatementNoShortIf
Rule 483   StatementNoShortIf -> IfThenElseStatementNoShortIf
Rule 484   StatementNoShortIf -> WhileStatementNoShortIf
Rule 485   StatementNoShortIf -> ForStatementNoShortIf
Rule 486   StatementWithoutTrailingSubstatement -> Block
Rule 487   StatementWithoutTrailingSubstatement -> EmptyStatement
Rule 488   StatementWithoutTrailingSubstatement -> ExpressionStatement
Rule 489   StatementWithoutTrailingSubstatement -> AssertStatement
Rule 490   StatementWithoutTrailingSubstatement -> DoStatement
Rule 491   StatementWithoutTrailingSubstatement -> BreakStatement
Rule 492   StatementWithoutTrailingSubstatement -> ContinueStatement
Rule 493   StatementWithoutTrailingSubstatement -> ReturnStatement
Rule 494   StatementWithoutTrailingSubstatement -> SynchronizedStatement
Rule 495   StatementWithoutTrailingSubstatement -> ThrowStatement
Rule 496   StatementWithoutTrailingSubstatement -> TryStatement
Rule 497   EmptyStatement -> ;
Rule 498   LabeledStatement -> Identifier : Statement
Rule 499   LabeledStatementNoShortIf -> Identifier : StatementNoShortIf
Rule 500   ExpressionStatement -> StatementExpression ;
Rule 501   StatementExpression -> Assignment
Rule 502   StatementExpression -> PreIncrementExpression
Rule 503   StatementExpression -> PreDecrementExpression
Rule 504   StatementExpression -> PostIncrementExpression
Rule 505   StatementExpression -> PostDecrementExpression
Rule 506   StatementExpression -> MethodInvocation
Rule 507   StatementExpression -> ClassInstanceCreationExpression
Rule 508   IfThenStatement -> if ( Expression ) Statement
Rule 509   IfThenElseStatement -> if ( Expression ) StatementNoShortIf else Statement
Rule 510   IfThenElseStatementNoShortIf -> if ( Expression ) StatementNoShortIf else StatementNoShortIf
Rule 511   AssertStatement -> assert Expression ;
Rule 512   AssertStatement -> assert Expression : Expression ;
Rule 513   EnumConstantName -> Identifier
Rule 514   WhileStatement -> while ( Expression ) Statement
Rule 515   WhileStaementNoShortIf -> while ( Expression ) StatementNoShortIf
Rule 516   DoStatement -> do Statement while ( Expression ) ;
Rule 517   ForStatement -> BasicForStatement
Rule 518   ForStatement -> EnhancedForStatement
Rule 519   ForStatementNoShortIf -> BasicForStatementNoShortIf
Rule 520   ForStatementNoShortIf -> EnhancedForStatementNoShortIf
Rule 521   BasicForStatement -> for ( ; ; ) Statement
Rule 522   BasicForStatement -> for ( ForInit ; ; ) Statement
Rule 523   BasicForStatement -> for ( ; Expression ; ) Statement
Rule 524   BasicForStatement -> for ( ; ; ForUpdate ) Statement
Rule 525   BasicForStatement -> for ( ForInit ; Expression ; ) Statement
Rule 526   BasicForStatement -> for ( ; Expression ; ForUpdate ) Statement
Rule 527   BasicForStatement -> for ( ForInit ; ; ForUpdate ) Statement
Rule 528   BasicForStatement -> for ( ForInit ; Expression ; ForUpdate ) Statement
Rule 529   BasicForStatementNoShortIf -> for ( ; ; ) StatementNoShortIf
Rule 530   BasicForStatementNoShortIf -> for ( ForInit ; ; ) StatementNoShortIf
Rule 531   BasicForStatementNoShortIf -> for ( ; Expression ; ) StatementNoShortIf
Rule 532   BasicForStatementNoShortIf -> for ( ; ; ForUpdate ) StatementNoShortIf
Rule 533   BasicForStatementNoShortIf -> for ( ForInit ; Expression ; ) StatementNoShortIf
Rule 534   BasicForStatementNoShortIf -> for ( ; Expression ; ForUpdate ) StatementNoShortIf
Rule 535   BasicForStatementNoShortIf -> for ( ForInit ; ; ForUpdate ) StatementNoShortIf
Rule 536   BasicForStatementNoShortIf -> for ( ForInit ; Expression ; ForUpdate ) StatementNoShortIf
Rule 537   ForInit -> StatementExpressionList
Rule 538   ForInit -> LocalVariableDeclaration
Rule 539   ForUpdate -> StatementExpressionList
Rule 540   StatementExpressionList -> StatementExpression
Rule 541   StatementExpressionList -> StatementExpression comStatementExpressionStar
Rule 542   comStatementExpressionStar -> , StatementExpression
Rule 543   comStatementExpressionStar -> comStatementExpressionStar , StatementExpression
Rule 544   EnhancedForStatement -> for ( UnannType VariableDeclaratorId : Expression ) Statement
Rule 545   EnhancedForStatement -> for ( VariableModifierStar UnannType VariableDeclaratorId : Expression ) Statement
Rule 546   BreakStatement -> break ;
Rule 547   BreakStatement -> break Identifier ;
Rule 548   ContinueStatement -> continue ;
Rule 549   ContinueStatement -> continue Identifier ;
Rule 550   ReturnStatement -> return ;
Rule 551   ReturnStatement -> return Expression ;
Rule 552   ThrowStatement -> throw Expression ;
Rule 553   SynchronizedStatement -> synchronized ( Expression ) Block
Rule 554   TryStatement -> try Block Catches
Rule 555   TryStatement -> try Block Finally
Rule 556   TryStatement -> try Block Catches Finally
Rule 557   TryStatement -> TryWithResourcesStatement
Rule 558   Catches -> CatchClause
Rule 559   Catches -> CatchClause CatchClauseStar
Rule 560   CatchClauseStar -> CatchClause
Rule 561   CatchClauseStar -> CatchClauseStar CatchClause
Rule 562   CatchClause -> catch ( CatchFormalParameter ) Block
Rule 563   CatchFormalParameter -> CatchType VariableDeclaratorId
Rule 564   CatchFormalParameter -> VariableModifierStar CatchType VariableDeclaratorId
Rule 565   CatchType -> UnannClassType
Rule 566   CatchType -> UnannClassType stickClassTypeStar
Rule 567   stickClassTypeStar -> | ClassType
Rule 568   stickClassTypeStar -> stickClassTypeStar | ClassType
Rule 569   Finally -> finally Block
Rule 570   TryWithResourcesStatement -> try ResourceSpecification Block
Rule 571   TryWithResourcesStatement -> try ResourceSpecification Block catches
Rule 572   TryWithResourcesStatement -> try ResourceSpecification Block finally
Rule 573   TryWithResourcesStatement -> try ResourceSpecification Block catches finally
Rule 574   ResourceSpecification -> ( ResourceList )
Rule 575   ResourceSpecification -> ( ResourceList ; )
Rule 576   ResourceList -> Resource
Rule 577   ResourceList -> Resource colResourceStar
Rule 578   colResourceStar -> ; Resource
Rule 579   colResourceStar -> colResourceStar ; Resource
Rule 580   Resource -> UnannType VariableDeclaratorId = Expression
Rule 581   Resource -> VariableModifierStar UnannType VariableDeclaratorId = Expression

Terminals, with rules where they appear

!                    : 151 178
%                    : 127 168
&                    : 133 140 140 142 142 148 424
(                    : 33 51 52 53 69 70 71 72 73 74 75 76 77 78 79 80 81 82 111 112 113 186 187 188 285 286 287 288 319 320 321 322 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 360 361 363 364 366 367 370 371 441 442 460 508 509 510 514 515 516 521 522 523 524 525 526 527 528 529 530 531 532 533 534 535 536 544 545 553 562 574 575
)                    : 33 51 52 53 69 70 71 72 73 74 75 76 77 78 79 80 81 82 111 112 113 186 187 188 285 286 287 288 319 320 321 322 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 360 361 363 364 366 367 370 371 441 442 460 508 509 510 514 515 516 521 522 523 524 525 526 527 528 529 530 531 532 533 534 535 536 544 545 553 562 574 575
*                    : 17 125 166
+                    : 128 163 171 174 174 184 184
,                    : 19 21 25 26 84 115 228 229 234 235 250 251 290 296 297 307 308 349 350 353 354 358 359 428 429 445 446 453 454 457 458 542 543
-                    : 109 129 164 172 175 175 185 185
.                    : 17 32 39 40 41 42 43 44 45 49 50 64 65 66 66 71 72 73 74 75 76 77 78 79 80 80 81 81 82 82 89 95 194 269 270 271 272 300 300 300 302 336 337 338 339 340 341 342 343
/                    : 126 167
:                    : 85 85 86 86 87 87 88 88 89 89 90 90 91 91 92 92 93 93 94 94 95 95 96 96 97 97 137 138 498 499 512 544 545
;                    : 9 16 17 312 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 373 374 470 497 500 511 512 516 521 521 522 522 523 523 524 524 525 525 526 526 527 527 528 528 529 529 530 530 531 531 532 532 533 533 534 534 535 535 536 536 546 547 548 549 550 551 552 575 578 579
<                    : 63 130 130 153 155 159 159 225 425
=                    : 124 125 126 127 128 129 130 131 132 133 134 135 150 150 151 155 156 252 447 580 581
>                    : 63 109 131 131 132 132 132 154 156 160 160 161 161 161 225 425
?                    : 137 138 432 433 434 435
@                    : 441 442 459 460
Comment              : 
IDENTIFIER           : 190
Keyword              : 
Literal              : 29
Operator             : 
Seperator            : 
[                    : 46 47 67 68 106 402 403 404 405 406 407 408 409 410 411
]                    : 46 47 67 68 106 402 403 404 405 406 407 408 409 410 411
^                    : 134 146
abstract             : 219
assert               : 511 512
based                : 
boolean              : 41 44 261 383 384
break                : 546 547
byte                 : 389
case                 : 
catch                : 562
char                 : 393
class                : 39 40 41 42 43 44 45 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212
const                : 
continue             : 548 549
default              : 
do                   : 516
double               : 395
else                 : 509 510
enum                 : 344 345 346 347
err                  : 
error                : 
extends              : 230 419 420 421 436
false                : 
final                : 220
finally              : 569 572 573
float                : 394
for                  : 521 522 523 524 525 526 527 528 529 530 531 532 533 534 535 536 544 545
goto                 : 
if                   : 508 509 510
implements           : 231
import               : 16 17
instanceof           : 157
int                  : 391
interface            : 
long                 : 392
native               : 221
new                  : 51 52 53 90 96 97 98 99 100 101 102 103
null                 : 
package              : 9
private              : 217
protected            : 216
public               : 215
return               : 550 551
short                : 390
static               : 218 314
strictfp             : 
super                : 65 66 77 78 79 80 81 82 88 89 94 95 332 333 334 335 336 337 338 339 340 341 342 343 437
switch               : 
synchronized         : 222 553
this                 : 31 32 302 303 328 329 330 331
throw                : 552
throws               : 304
transient            : 223
true                 : 
try                  : 554 555 556 570 571 572 573
void                 : 45 284
volatile             : 224
while                : 514 515 516
|                    : 135 144 567 568
~                    : 177

Nonterminals, with rules where they appear

AdditionalBound      : 422 423
AdditionalBoundS     : 187 188
AdditionalBounds     : 421 423
AdditiveExpression   : 158 159 160 161 163 164
AndExpression        : 145 146 148
AnnoIdenStar         : 54 55 57 58
Annotation           : 372 385 386 418 450
Annotations          : 54 56 57 59 106 269 270 281 282 300 302 303 382 384 386 407 408 411 434 435
ArgumentList         : 51 52 69 71 72 74 75 77 78 80 81 84 328 329 332 333 336 338 340 342 360 363 366 370
ArrayAccess          : 36 123
ArrayCreationExpression : 28
ArrayInitializer     : 19 20 21 102 103 257
ArrayType            : 97 398 404
AssertStatement      : 489
Assignment           : 119 501
AssignmentExpression : 108
AssignmentOperator   : 120
BasicForStatement    : 517
BasicForStatementNoShortIf : 519
Block                : 117 311 313 314 462 486 553 554 555 556 562 569 570 571 572 573
BlockStatement       : 466
BlockStatements      : 324 325 464 466
BockStatement        : 465
BreakStatement       : 491
CastExpression       : 179
CatchClause          : 558 559 560 561
CatchClauseStar      : 559 561
CatchFormalParameter : 562
CatchType            : 563 564
Catches              : 554 556
ClassBody            : 51 52 53 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 236 360 361 362 366 367 368
ClassBodyDeclaration : 375 376
ClassBodyDeclarationStar : 236 373 376
ClassBodyeclaration  : 238
ClassBodyeclarationStar : 238
ClassDeclaration     : 18 245 468
ClassInstanceCreationExpression : 34 507
ClassLiteral         : 30
ClassMemberDeclaration : 239
ClassOrInterfaceType : 99 101 103 400 401 420 421
ClassOrInterfaceTypeToInstantiate : 51 52 53
ClassType            : 90 96 230 309 567 568
ClassoOrInterfaceType : 396
CommaEnumConstants   : 356 359
CommaExceptionTypes  : 305 308
CommaFormalParameters : 292 293 297
CommaInterfaceTypeStar : 233 235
CommaTypeParameterStar : 227 229
CommaVariableDeclaratorStar : 248 251
CommaVariableInitializers : 24 26
CompilationUnit      : 0
ConditionalAndExpression : 139 140 142
ConditionalExpression : 118 137 448
ConditionalOrExpression : 136 137 138 140
ConstantExpression   : 
ConstructorBody      : 315 316 317 318 324 325 326
ConstructorDeclaration : 242
ConstructorDeclarator : 315 316 317 318
ContinueStatement    : 492
DimExpr              : 104 105
DimExprs             : 98 99 100 101 105
Dims                 : 98 99 102 103 254 275 276 277 285 286
DoStatement          : 490
ElementValue         : 447 455 456 457 458 460
ElementValueArrayInitializer : 449 452 453 454
ElementValueList     : 452 454
ElementValuePair     : 443 444 445 446
ElementValuePairList : 442
EmptyStatement       : 487
EnhancedForStatement : 518
EnhancedForStatementNoShortIf : 520
EnumBody             : 344 345 346 347 349 350 351 352 353 354 355
EnumBodyDeclarations : 349 351 353 355
EnumConstant         : 356 357 358 359
EnumConstantList     : 349 350 351 352
EnumConstantModifier : 377 378
EnumConstantModifiers : 360 361 362 363 364 365 378
EnumConstantName     : 
EnumDeclaration      : 196
EqualityExpression   : 147 148 150 151
ExceptionType        : 305 306 307 308
ExceptionTypeList    : 304
ExclusiveOrExpression : 143 144 146
ExplicitConstructorInvocation : 324 326
Expression           : 33 67 68 83 84 106 116 120 137 138 189 256 508 509 510 511 512 512 514 515 516 523 525 526 528 531 533 534 536 544 545 551 552 553 580 581
ExpressionStatement  : 488
FieldAccess          : 35 122
FieldDeclaration     : 243
Finally              : 555 556
FloatingPointType    : 388
ForInit              : 522 525 527 528 530 533 535 536
ForStatement         : 480
ForStatementNoShortIf : 485
ForUpdate            : 524 526 527 528 532 534 535 536
FormalParameter      : 292 294 296 297 301
FormalParameterList  : 111 285 287 319 320
FormalParameters     : 290
Identifier           : 54 55 56 57 58 59 60 61 64 65 66 71 72 73 74 75 76 77 78 79 80 81 82 85 86 87 88 89 91 92 93 94 95 110 114 115 193 194 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 254 255 267 268 269 270 271 272 274 285 286 287 288 302 323 344 345 346 347 360 361 362 363 364 365 366 367 368 369 370 371 412 413 414 415 447 498 499 513 547 549
IfThenElseStatement  : 478
IfThenElseStatementNoShortIf : 483
IfThenStatement      : 477
ImportDeclaration    : 10 11 11 13
ImportDeclarations   : 1 2 4 6 13
InclusiveOrExpression : 141 142 144
InferredFormalParameterList : 113 115
InstanceInitializer  : 240
IntegralType         : 387
InterfaceType        : 232 233 234 235 424
InterfaceTypeList    : 231
LabeledStatement     : 476
LabeledStatementNoShortIf : 482
LambdaBody           : 109
LambdaExpression     : 107 138 188
LambdaParameters     : 109
LastFormalParameter  : 290 291
LeftHandSide         : 120
LocalVariableDeclaration : 470 538
LocalVariableDeclarationStatement : 467
MarkerAnnotation     : 439
MethodBody           : 278
MethodDeclaration    : 244
MethodDeclarator     : 279 280 281 282
MethodHeader         : 278
MethodInvocation     : 37 506
MethodReference      : 38
Modifier             : 213 214
Modifiers            : 197 199 201 203 205 207 209 211 214 246 278 298 300 315 318 344 345
MultiplicativeExpression : 162 163 164 166 167 168
Name                 : 9 16 17 32 39 42 49 66 67 69 70 71 72 73 80 81 82 85 89 91 95 121 181 194 336 337 338 339 399 403 441 442 459 460
NormalAnnotation     : 438
NormalClassDeclaration : 195
NumericType          : 40 43 260 381 382
PackageDeclaration   : 1 2 3 5
PostDecrementExpression : 183 505
PostIncrementExpression : 182 504
PostfixExpression    : 176 184 185
PreDecrementExpression : 170 503
PreIncrementExpression : 169 502
Primary              : 50 64 74 75 76 87 93 180 340 341 342 343
PrimaryNoNewArray    : 27 68
PrimitiveType        : 98 100 102 186 379 402
QualifiedName        : 192
ReceiverParameter    : 289 293 295
Reference            : 437
ReferenceType        : 86 92 157 187 188 380 430 436
RelationalExpression : 149 150 151 153 154 155 156 157
Resource             : 576 577 578 579
ResourceList         : 574 575
ResourceSpecification : 570 571 572 573
Result               : 279 280 281 282
ReturnStatement      : 493
ShiftExpression      : 152 153 154 155 156 159 160 161
SimpleName           : 191
SimpleTypeName       : 319 320 321 322
SingleElementAnnotation : 440
SingleTypeImportDeclaration : 14
SquareStar           : 39 40 41 47
Statement            : 469 498 508 509 514 516 521 522 523 524 525 526 527 528 544 545
StatementExpression  : 500 540 541 542 543
StatementExpressionList : 537 539
StatementNoShortIf   : 499 509 510 510 515 529 530 531 532 533 534 535 536
StatementWithoutTrailingSubstatement : 475 481
StaticInitializer    : 241
Superclass           : 197 198 199 200 205 206 207 208
Superinterfaces      : 197 198 201 202 205 206 209 210 344 347
SynchronizedStatement : 494
ThrowStatement       : 495
Throws               : 279 281 315 316
TryStatement         : 496
TryWithResourcesStatement : 557
Type                 : 437
TypeArgument         : 426 427 428 429
TypeArgumentList     : 425
TypeArguments        : 51 53 62 71 74 77 80 85 86 87 88 89 90 267 269 271 328 330 332 335 336 337 340 341
TypeArgumentsOrDiamond : 54 55 56 60
TypeBound            : 413 415
TypeDeclaration      : 12
TypeDeclarations     : 1 3 4 7
TypeImportOnDemandDeclaration : 15
TypeParameter        : 226 227 228 229
TypeParameterList    : 225
TypeParameterModifier : 416 417
TypeParameterModifiers : 414 415 417
TypeParameters       : 197 198 199 200 201 202 203 204 281 282 319 322
TypeVariable         : 310 397 419
UnannArrayType       : 264
UnannClassOrInterfaceType : 262 269 270 271 272 276
UnannClassType       : 265 273 565 566
UnannInterfaceType   : 266
UnannPrimitiveType   : 258 275
UnannReferenceType   : 259
UnannType            : 246 247 283 298 299 300 302 303 471 472 544 545 580 581
UnannTypeVariable    : 263 277
UnaryExpression      : 165 166 167 168 171 172 174 175 177 178 186
UnaryExpressionNotPlusMinus : 173 187
UnqualifiedClassInstanceCreationExpression : 48 49 50
VariableDeclarator   : 248 249 250 251
VariableDeclaratorId : 252 253 298 299 300 544 545 563 564 580 581
VariableDeclaratorList : 246 247 471 472
VariableInitializer  : 23 24 25 26 252
VariableInitializerList : 19 20
VariableModifier     : 473 474
VariableModifierStar : 472 474 545 564 581
WhileStaementNoShortIf : 
WhileStatement       : 479
WhileStatementNoShortIf : 484
Wildcard             : 431
WildcardBounds       : 433 435
catches              : 571 573
colResourceStar      : 577 579
comElementValuePairs : 444 446
comElementValues     : 456 458
comStatementExpressionStar : 541 543
comTypeArguments     : 427 429
oneBlockStatements   : 462
sqAnnotations        : 406 408 410 411
stickClassTypeStar   : 566 568

